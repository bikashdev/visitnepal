#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visit_Nepal.Models.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VisitNepa")]
	public partial class VisitNepaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    #endregion
		
		public VisitNepaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VisitNepaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VisitNepaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitNepaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitNepaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitNepaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _InfoID;
		
		private string _InfoCategory;
		
		private string _InfoTitle;
		
		private string _InfoBody;
		
		private string _InfoSource;
		
		private System.DateTime _InfoUpdateDate;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInfoIDChanging(long value);
    partial void OnInfoIDChanged();
    partial void OnInfoCategoryChanging(string value);
    partial void OnInfoCategoryChanged();
    partial void OnInfoTitleChanging(string value);
    partial void OnInfoTitleChanged();
    partial void OnInfoBodyChanging(string value);
    partial void OnInfoBodyChanged();
    partial void OnInfoSourceChanging(string value);
    partial void OnInfoSourceChanged();
    partial void OnInfoUpdateDateChanging(System.DateTime value);
    partial void OnInfoUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Article()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long InfoID
		{
			get
			{
				return this._InfoID;
			}
			set
			{
				if ((this._InfoID != value))
				{
					this.OnInfoIDChanging(value);
					this.SendPropertyChanging();
					this._InfoID = value;
					this.SendPropertyChanged("InfoID");
					this.OnInfoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoCategory", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InfoCategory
		{
			get
			{
				return this._InfoCategory;
			}
			set
			{
				if ((this._InfoCategory != value))
				{
					this.OnInfoCategoryChanging(value);
					this.SendPropertyChanging();
					this._InfoCategory = value;
					this.SendPropertyChanged("InfoCategory");
					this.OnInfoCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoTitle", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string InfoTitle
		{
			get
			{
				return this._InfoTitle;
			}
			set
			{
				if ((this._InfoTitle != value))
				{
					this.OnInfoTitleChanging(value);
					this.SendPropertyChanging();
					this._InfoTitle = value;
					this.SendPropertyChanged("InfoTitle");
					this.OnInfoTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoBody", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string InfoBody
		{
			get
			{
				return this._InfoBody;
			}
			set
			{
				if ((this._InfoBody != value))
				{
					this.OnInfoBodyChanging(value);
					this.SendPropertyChanging();
					this._InfoBody = value;
					this.SendPropertyChanged("InfoBody");
					this.OnInfoBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoSource", DbType="VarChar(300)")]
		public string InfoSource
		{
			get
			{
				return this._InfoSource;
			}
			set
			{
				if ((this._InfoSource != value))
				{
					this.OnInfoSourceChanging(value);
					this.SendPropertyChanging();
					this._InfoSource = value;
					this.SendPropertyChanged("InfoSource");
					this.OnInfoSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime InfoUpdateDate
		{
			get
			{
				return this._InfoUpdateDate;
			}
			set
			{
				if ((this._InfoUpdateDate != value))
				{
					this.OnInfoUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._InfoUpdateDate = value;
					this.SendPropertyChanged("InfoUpdateDate");
					this.OnInfoUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
